"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

from django.conf.global_settings import AUTH_USER_MODEL, MEDIA_ROOT, MEDIA_URL

# from django.conf.global_settings import STATICFILES_DIRS

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent 
# полный путь к текущему файлу минус app/settings.py (каталог в которой находится этот файл)
# /Users/yaroslav/Documents/VSC/App


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/
# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-*7m9w_k1)%1wlqu7t4c8b--0spg_)_7a@-peapmr4e@%dc4w^t'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True # Вся информация об ошибках указывается если DEBUG = True, при выпуске на продакшен (на сервер), нужно его выключить!

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles', # статические файлы, специальное приложение, которое обслуживает и ищет статические файлы 
    'django.contrib.postgres',
    'debug_toolbar', # дополнительные приложения

    'main', # созданные разработчиком приложения
    'goods',
    'users',
    'carts',
    'orders' 
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware', # Отвечает за безопасность
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware', # этот middleware нужен для защищенных POST запросов
    'django.contrib.auth.middleware.AuthenticationMiddleware', # для аутентификации
    'django.contrib.messages.middleware.MessageMiddleware', # Для сообщение пользователю
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "debug_toolbar.middleware.DebugToolbarMiddleware",

]

ROOT_URLCONF = 'app.urls' # корневой urlconf

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates', # говорит о том, какой шаблонизатор подключен
        'DIRS': [BASE_DIR / "templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'app.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql', # какую использовать бд
        'NAME': 'home', # говорит, где искать базу данных
        'USER': 'home',
        'PASSWORD': 'home',
        'HOST': 'localhost',
        'PORT': '5432'
    
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'ru' # Перевод Django на определенный язык

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/' # все статические файлы будут доступны по URL, начинающемуся со 'static'

STATICFILES_DIRS = [
    BASE_DIR / 'static' 
    # к дополнительному поиску в приложениях статических файлов (templates/appname)
    # будет осуществляться поиск по путям, данных в списке
]

MEDIA_URL = 'media/' # также по аналогии со STATIC_URL 


MEDIA_ROOT = BASE_DIR / 'media'
# константа, в которой говорится где Django будет искать изображения 


# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

INTERNAL_IPS = [
    # ...
    "127.0.0.1",
    # ...
]

AUTH_USER_MODEL = 'users.User' 
# переменная, которая говорит какую модель использовать для авторизации по умолчанию
LOGIN_URL = '/user/login/'
# говорит, куда будут перенаправлять незалогининых пользователй при заходе на profile